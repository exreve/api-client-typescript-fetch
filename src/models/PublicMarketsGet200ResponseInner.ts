/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicMarketsGet200ResponseInnerLimits } from './PublicMarketsGet200ResponseInnerLimits';
import {
    PublicMarketsGet200ResponseInnerLimitsFromJSON,
    PublicMarketsGet200ResponseInnerLimitsFromJSONTyped,
    PublicMarketsGet200ResponseInnerLimitsToJSON,
    PublicMarketsGet200ResponseInnerLimitsToJSONTyped,
} from './PublicMarketsGet200ResponseInnerLimits';
import type { PublicMarketsGet200ResponseInnerPrecision } from './PublicMarketsGet200ResponseInnerPrecision';
import {
    PublicMarketsGet200ResponseInnerPrecisionFromJSON,
    PublicMarketsGet200ResponseInnerPrecisionFromJSONTyped,
    PublicMarketsGet200ResponseInnerPrecisionToJSON,
    PublicMarketsGet200ResponseInnerPrecisionToJSONTyped,
} from './PublicMarketsGet200ResponseInnerPrecision';

/**
 * 
 * @export
 * @interface PublicMarketsGet200ResponseInner
 */
export interface PublicMarketsGet200ResponseInner {
    /**
     * 
     * @type {string}
     * @memberof PublicMarketsGet200ResponseInner
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PublicMarketsGet200ResponseInner
     */
    base: string;
    /**
     * 
     * @type {string}
     * @memberof PublicMarketsGet200ResponseInner
     */
    quote: string;
    /**
     * 
     * @type {PublicMarketsGet200ResponseInnerPrecision}
     * @memberof PublicMarketsGet200ResponseInner
     */
    precision: PublicMarketsGet200ResponseInnerPrecision;
    /**
     * 
     * @type {PublicMarketsGet200ResponseInnerLimits}
     * @memberof PublicMarketsGet200ResponseInner
     */
    limits: PublicMarketsGet200ResponseInnerLimits;
    /**
     * 
     * @type {any}
     * @memberof PublicMarketsGet200ResponseInner
     */
    active?: any | null;
}

/**
 * Check if a given object implements the PublicMarketsGet200ResponseInner interface.
 */
export function instanceOfPublicMarketsGet200ResponseInner(value: object): value is PublicMarketsGet200ResponseInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('base' in value) || value['base'] === undefined) return false;
    if (!('quote' in value) || value['quote'] === undefined) return false;
    if (!('precision' in value) || value['precision'] === undefined) return false;
    if (!('limits' in value) || value['limits'] === undefined) return false;
    return true;
}

export function PublicMarketsGet200ResponseInnerFromJSON(json: any): PublicMarketsGet200ResponseInner {
    return PublicMarketsGet200ResponseInnerFromJSONTyped(json, false);
}

export function PublicMarketsGet200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicMarketsGet200ResponseInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'base': json['base'],
        'quote': json['quote'],
        'precision': PublicMarketsGet200ResponseInnerPrecisionFromJSON(json['precision']),
        'limits': PublicMarketsGet200ResponseInnerLimitsFromJSON(json['limits']),
        'active': json['active'] == null ? undefined : json['active'],
    };
}

export function PublicMarketsGet200ResponseInnerToJSON(json: any): PublicMarketsGet200ResponseInner {
    return PublicMarketsGet200ResponseInnerToJSONTyped(json, false);
}

export function PublicMarketsGet200ResponseInnerToJSONTyped(value?: PublicMarketsGet200ResponseInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'base': value['base'],
        'quote': value['quote'],
        'precision': PublicMarketsGet200ResponseInnerPrecisionToJSON(value['precision']),
        'limits': PublicMarketsGet200ResponseInnerLimitsToJSON(value['limits']),
        'active': value['active'],
    };
}

