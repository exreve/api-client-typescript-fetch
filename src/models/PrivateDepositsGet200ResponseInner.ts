/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PrivateDepositsGet200ResponseInner
 */
export interface PrivateDepositsGet200ResponseInner {
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    currency: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    fee: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    network: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    status: PrivateDepositsGet200ResponseInnerStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    timestamp: number;
    /**
     * 
     * @type {number}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    confirmations: number;
    /**
     * 
     * @type {number}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    confirmationsRequired: number;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    addressTo?: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    addressFrom?: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    memo?: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    txid?: string;
    /**
     * 
     * @type {number}
     * @memberof PrivateDepositsGet200ResponseInner
     */
    blockHeight?: number;
}


/**
 * @export
 */
export const PrivateDepositsGet200ResponseInnerStatusEnum = {
    Completed: 'completed',
    Pending: 'pending',
    Failed: 'failed'
} as const;
export type PrivateDepositsGet200ResponseInnerStatusEnum = typeof PrivateDepositsGet200ResponseInnerStatusEnum[keyof typeof PrivateDepositsGet200ResponseInnerStatusEnum];


/**
 * Check if a given object implements the PrivateDepositsGet200ResponseInner interface.
 */
export function instanceOfPrivateDepositsGet200ResponseInner(value: object): value is PrivateDepositsGet200ResponseInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('fee' in value) || value['fee'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('confirmations' in value) || value['confirmations'] === undefined) return false;
    if (!('confirmationsRequired' in value) || value['confirmationsRequired'] === undefined) return false;
    return true;
}

export function PrivateDepositsGet200ResponseInnerFromJSON(json: any): PrivateDepositsGet200ResponseInner {
    return PrivateDepositsGet200ResponseInnerFromJSONTyped(json, false);
}

export function PrivateDepositsGet200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateDepositsGet200ResponseInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'currency': json['currency'],
        'amount': json['amount'],
        'fee': json['fee'],
        'network': json['network'],
        'status': json['status'],
        'timestamp': json['timestamp'],
        'confirmations': json['confirmations'],
        'confirmationsRequired': json['confirmations_required'],
        'addressTo': json['address_to'] == null ? undefined : json['address_to'],
        'addressFrom': json['address_from'] == null ? undefined : json['address_from'],
        'memo': json['memo'] == null ? undefined : json['memo'],
        'txid': json['txid'] == null ? undefined : json['txid'],
        'blockHeight': json['block_height'] == null ? undefined : json['block_height'],
    };
}

export function PrivateDepositsGet200ResponseInnerToJSON(json: any): PrivateDepositsGet200ResponseInner {
    return PrivateDepositsGet200ResponseInnerToJSONTyped(json, false);
}

export function PrivateDepositsGet200ResponseInnerToJSONTyped(value?: PrivateDepositsGet200ResponseInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'currency': value['currency'],
        'amount': value['amount'],
        'fee': value['fee'],
        'network': value['network'],
        'status': value['status'],
        'timestamp': value['timestamp'],
        'confirmations': value['confirmations'],
        'confirmations_required': value['confirmationsRequired'],
        'address_to': value['addressTo'],
        'address_from': value['addressFrom'],
        'memo': value['memo'],
        'txid': value['txid'],
        'block_height': value['blockHeight'],
    };
}

