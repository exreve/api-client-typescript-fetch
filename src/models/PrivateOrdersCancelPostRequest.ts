/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PrivateOrdersCancelPostRequest
 */
export interface PrivateOrdersCancelPostRequest {
    /**
     * 
     * @type {string}
     * @memberof PrivateOrdersCancelPostRequest
     */
    orderId: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateOrdersCancelPostRequest
     */
    symbol: string;
}

/**
 * Check if a given object implements the PrivateOrdersCancelPostRequest interface.
 */
export function instanceOfPrivateOrdersCancelPostRequest(value: object): value is PrivateOrdersCancelPostRequest {
    if (!('orderId' in value) || value['orderId'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    return true;
}

export function PrivateOrdersCancelPostRequestFromJSON(json: any): PrivateOrdersCancelPostRequest {
    return PrivateOrdersCancelPostRequestFromJSONTyped(json, false);
}

export function PrivateOrdersCancelPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateOrdersCancelPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'orderId': json['order_id'],
        'symbol': json['symbol'],
    };
}

export function PrivateOrdersCancelPostRequestToJSON(json: any): PrivateOrdersCancelPostRequest {
    return PrivateOrdersCancelPostRequestToJSONTyped(json, false);
}

export function PrivateOrdersCancelPostRequestToJSONTyped(value?: PrivateOrdersCancelPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'order_id': value['orderId'],
        'symbol': value['symbol'],
    };
}

