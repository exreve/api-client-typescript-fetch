/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PrivatePoolJoinPostRequest
 */
export interface PrivatePoolJoinPostRequest {
    /**
     * 
     * @type {string}
     * @memberof PrivatePoolJoinPostRequest
     */
    poolId: string;
    /**
     * 
     * @type {string}
     * @memberof PrivatePoolJoinPostRequest
     */
    maxBaseAmount: string;
    /**
     * 
     * @type {string}
     * @memberof PrivatePoolJoinPostRequest
     */
    maxQuoteAmount: string;
    /**
     * 
     * @type {string}
     * @memberof PrivatePoolJoinPostRequest
     */
    minPrice?: string;
    /**
     * 
     * @type {string}
     * @memberof PrivatePoolJoinPostRequest
     */
    maxPrice?: string;
}

/**
 * Check if a given object implements the PrivatePoolJoinPostRequest interface.
 */
export function instanceOfPrivatePoolJoinPostRequest(value: object): value is PrivatePoolJoinPostRequest {
    if (!('poolId' in value) || value['poolId'] === undefined) return false;
    if (!('maxBaseAmount' in value) || value['maxBaseAmount'] === undefined) return false;
    if (!('maxQuoteAmount' in value) || value['maxQuoteAmount'] === undefined) return false;
    return true;
}

export function PrivatePoolJoinPostRequestFromJSON(json: any): PrivatePoolJoinPostRequest {
    return PrivatePoolJoinPostRequestFromJSONTyped(json, false);
}

export function PrivatePoolJoinPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivatePoolJoinPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'poolId': json['pool_id'],
        'maxBaseAmount': json['max_base_amount'],
        'maxQuoteAmount': json['max_quote_amount'],
        'minPrice': json['min_price'] == null ? undefined : json['min_price'],
        'maxPrice': json['max_price'] == null ? undefined : json['max_price'],
    };
}

export function PrivatePoolJoinPostRequestToJSON(json: any): PrivatePoolJoinPostRequest {
    return PrivatePoolJoinPostRequestToJSONTyped(json, false);
}

export function PrivatePoolJoinPostRequestToJSONTyped(value?: PrivatePoolJoinPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pool_id': value['poolId'],
        'max_base_amount': value['maxBaseAmount'],
        'max_quote_amount': value['maxQuoteAmount'],
        'min_price': value['minPrice'],
        'max_price': value['maxPrice'],
    };
}

