/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicNetworksGet200ResponseInner } from './PublicNetworksGet200ResponseInner';
import {
    PublicNetworksGet200ResponseInnerFromJSON,
    PublicNetworksGet200ResponseInnerFromJSONTyped,
    PublicNetworksGet200ResponseInnerToJSON,
    PublicNetworksGet200ResponseInnerToJSONTyped,
} from './PublicNetworksGet200ResponseInner';
import type { PublicCurrenciesGet200ResponseInner } from './PublicCurrenciesGet200ResponseInner';
import {
    PublicCurrenciesGet200ResponseInnerFromJSON,
    PublicCurrenciesGet200ResponseInnerFromJSONTyped,
    PublicCurrenciesGet200ResponseInnerToJSON,
    PublicCurrenciesGet200ResponseInnerToJSONTyped,
} from './PublicCurrenciesGet200ResponseInner';

/**
 * 
 * @export
 * @interface PrivateWithdrawalsPreparePost200Response
 */
export interface PrivateWithdrawalsPreparePost200Response {
    /**
     * 
     * @type {PublicCurrenciesGet200ResponseInner}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    currency: PublicCurrenciesGet200ResponseInner;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    amountYouReceive: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    fee: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    amountYouPay: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    address: string;
    /**
     * 
     * @type {PublicNetworksGet200ResponseInner}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    network: PublicNetworksGet200ResponseInner;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    payload: string;
    /**
     * 
     * @type {number}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    expireInMs: number;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePost200Response
     */
    memo?: string;
}

/**
 * Check if a given object implements the PrivateWithdrawalsPreparePost200Response interface.
 */
export function instanceOfPrivateWithdrawalsPreparePost200Response(value: object): value is PrivateWithdrawalsPreparePost200Response {
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('amountYouReceive' in value) || value['amountYouReceive'] === undefined) return false;
    if (!('fee' in value) || value['fee'] === undefined) return false;
    if (!('amountYouPay' in value) || value['amountYouPay'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('payload' in value) || value['payload'] === undefined) return false;
    if (!('expireInMs' in value) || value['expireInMs'] === undefined) return false;
    return true;
}

export function PrivateWithdrawalsPreparePost200ResponseFromJSON(json: any): PrivateWithdrawalsPreparePost200Response {
    return PrivateWithdrawalsPreparePost200ResponseFromJSONTyped(json, false);
}

export function PrivateWithdrawalsPreparePost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateWithdrawalsPreparePost200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'currency': PublicCurrenciesGet200ResponseInnerFromJSON(json['currency']),
        'amountYouReceive': json['amount_you_receive'],
        'fee': json['fee'],
        'amountYouPay': json['amount_you_pay'],
        'address': json['address'],
        'network': PublicNetworksGet200ResponseInnerFromJSON(json['network']),
        'payload': json['payload'],
        'expireInMs': json['expire_in_ms'],
        'memo': json['memo'] == null ? undefined : json['memo'],
    };
}

export function PrivateWithdrawalsPreparePost200ResponseToJSON(json: any): PrivateWithdrawalsPreparePost200Response {
    return PrivateWithdrawalsPreparePost200ResponseToJSONTyped(json, false);
}

export function PrivateWithdrawalsPreparePost200ResponseToJSONTyped(value?: PrivateWithdrawalsPreparePost200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'currency': PublicCurrenciesGet200ResponseInnerToJSON(value['currency']),
        'amount_you_receive': value['amountYouReceive'],
        'fee': value['fee'],
        'amount_you_pay': value['amountYouPay'],
        'address': value['address'],
        'network': PublicNetworksGet200ResponseInnerToJSON(value['network']),
        'payload': value['payload'],
        'expire_in_ms': value['expireInMs'],
        'memo': value['memo'],
    };
}

