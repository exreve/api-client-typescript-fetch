/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PrivateOrdersGet200ResponseInnerFee } from './PrivateOrdersGet200ResponseInnerFee';
import {
    PrivateOrdersGet200ResponseInnerFeeFromJSON,
    PrivateOrdersGet200ResponseInnerFeeFromJSONTyped,
    PrivateOrdersGet200ResponseInnerFeeToJSON,
    PrivateOrdersGet200ResponseInnerFeeToJSONTyped,
} from './PrivateOrdersGet200ResponseInnerFee';

/**
 * 
 * @export
 * @interface PrivateTradesGet200ResponseInner
 */
export interface PrivateTradesGet200ResponseInner {
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    orderId: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    symbol: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    type: PrivateTradesGet200ResponseInnerTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    side: PrivateTradesGet200ResponseInnerSideEnum;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    takerOrMaker: PrivateTradesGet200ResponseInnerTakerOrMakerEnum;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    price: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    cost: string;
    /**
     * 
     * @type {PrivateOrdersGet200ResponseInnerFee}
     * @memberof PrivateTradesGet200ResponseInner
     */
    fee: PrivateOrdersGet200ResponseInnerFee;
    /**
     * 
     * @type {number}
     * @memberof PrivateTradesGet200ResponseInner
     */
    createdAt: number;
    /**
     * 
     * @type {string}
     * @memberof PrivateTradesGet200ResponseInner
     */
    clientOrderId?: string;
}


/**
 * @export
 */
export const PrivateTradesGet200ResponseInnerTypeEnum = {
    Market: 'market',
    Limit: 'limit'
} as const;
export type PrivateTradesGet200ResponseInnerTypeEnum = typeof PrivateTradesGet200ResponseInnerTypeEnum[keyof typeof PrivateTradesGet200ResponseInnerTypeEnum];

/**
 * @export
 */
export const PrivateTradesGet200ResponseInnerSideEnum = {
    Buy: 'buy',
    Sell: 'sell'
} as const;
export type PrivateTradesGet200ResponseInnerSideEnum = typeof PrivateTradesGet200ResponseInnerSideEnum[keyof typeof PrivateTradesGet200ResponseInnerSideEnum];

/**
 * @export
 */
export const PrivateTradesGet200ResponseInnerTakerOrMakerEnum = {
    Taker: 'taker',
    Maker: 'maker'
} as const;
export type PrivateTradesGet200ResponseInnerTakerOrMakerEnum = typeof PrivateTradesGet200ResponseInnerTakerOrMakerEnum[keyof typeof PrivateTradesGet200ResponseInnerTakerOrMakerEnum];


/**
 * Check if a given object implements the PrivateTradesGet200ResponseInner interface.
 */
export function instanceOfPrivateTradesGet200ResponseInner(value: object): value is PrivateTradesGet200ResponseInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('orderId' in value) || value['orderId'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('side' in value) || value['side'] === undefined) return false;
    if (!('takerOrMaker' in value) || value['takerOrMaker'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('cost' in value) || value['cost'] === undefined) return false;
    if (!('fee' in value) || value['fee'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function PrivateTradesGet200ResponseInnerFromJSON(json: any): PrivateTradesGet200ResponseInner {
    return PrivateTradesGet200ResponseInnerFromJSONTyped(json, false);
}

export function PrivateTradesGet200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateTradesGet200ResponseInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'orderId': json['order_id'],
        'symbol': json['symbol'],
        'type': json['type'],
        'side': json['side'],
        'takerOrMaker': json['taker_or_maker'],
        'price': json['price'],
        'amount': json['amount'],
        'cost': json['cost'],
        'fee': PrivateOrdersGet200ResponseInnerFeeFromJSON(json['fee']),
        'createdAt': json['created_at'],
        'clientOrderId': json['client_order_id'] == null ? undefined : json['client_order_id'],
    };
}

export function PrivateTradesGet200ResponseInnerToJSON(json: any): PrivateTradesGet200ResponseInner {
    return PrivateTradesGet200ResponseInnerToJSONTyped(json, false);
}

export function PrivateTradesGet200ResponseInnerToJSONTyped(value?: PrivateTradesGet200ResponseInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'order_id': value['orderId'],
        'symbol': value['symbol'],
        'type': value['type'],
        'side': value['side'],
        'taker_or_maker': value['takerOrMaker'],
        'price': value['price'],
        'amount': value['amount'],
        'cost': value['cost'],
        'fee': PrivateOrdersGet200ResponseInnerFeeToJSON(value['fee']),
        'created_at': value['createdAt'],
        'client_order_id': value['clientOrderId'],
    };
}

