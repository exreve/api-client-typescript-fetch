/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PrivateWithdrawalsPreparePostRequest
 */
export interface PrivateWithdrawalsPreparePostRequest {
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePostRequest
     */
    currency: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePostRequest
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePostRequest
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePostRequest
     */
    network: string;
    /**
     * 
     * @type {string}
     * @memberof PrivateWithdrawalsPreparePostRequest
     */
    memo?: string;
}

/**
 * Check if a given object implements the PrivateWithdrawalsPreparePostRequest interface.
 */
export function instanceOfPrivateWithdrawalsPreparePostRequest(value: object): value is PrivateWithdrawalsPreparePostRequest {
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('network' in value) || value['network'] === undefined) return false;
    return true;
}

export function PrivateWithdrawalsPreparePostRequestFromJSON(json: any): PrivateWithdrawalsPreparePostRequest {
    return PrivateWithdrawalsPreparePostRequestFromJSONTyped(json, false);
}

export function PrivateWithdrawalsPreparePostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateWithdrawalsPreparePostRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'currency': json['currency'],
        'amount': json['amount'],
        'address': json['address'],
        'network': json['network'],
        'memo': json['memo'] == null ? undefined : json['memo'],
    };
}

export function PrivateWithdrawalsPreparePostRequestToJSON(json: any): PrivateWithdrawalsPreparePostRequest {
    return PrivateWithdrawalsPreparePostRequestToJSONTyped(json, false);
}

export function PrivateWithdrawalsPreparePostRequestToJSONTyped(value?: PrivateWithdrawalsPreparePostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'currency': value['currency'],
        'amount': value['amount'],
        'address': value['address'],
        'network': value['network'],
        'memo': value['memo'],
    };
}

