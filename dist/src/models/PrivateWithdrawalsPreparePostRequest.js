"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPrivateWithdrawalsPreparePostRequest = instanceOfPrivateWithdrawalsPreparePostRequest;
exports.PrivateWithdrawalsPreparePostRequestFromJSON = PrivateWithdrawalsPreparePostRequestFromJSON;
exports.PrivateWithdrawalsPreparePostRequestFromJSONTyped = PrivateWithdrawalsPreparePostRequestFromJSONTyped;
exports.PrivateWithdrawalsPreparePostRequestToJSON = PrivateWithdrawalsPreparePostRequestToJSON;
exports.PrivateWithdrawalsPreparePostRequestToJSONTyped = PrivateWithdrawalsPreparePostRequestToJSONTyped;
/**
 * Check if a given object implements the PrivateWithdrawalsPreparePostRequest interface.
 */
function instanceOfPrivateWithdrawalsPreparePostRequest(value) {
    if (!('currency' in value) || value['currency'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('address' in value) || value['address'] === undefined)
        return false;
    if (!('network' in value) || value['network'] === undefined)
        return false;
    return true;
}
function PrivateWithdrawalsPreparePostRequestFromJSON(json) {
    return PrivateWithdrawalsPreparePostRequestFromJSONTyped(json, false);
}
function PrivateWithdrawalsPreparePostRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'currency': json['currency'],
        'amount': json['amount'],
        'address': json['address'],
        'network': json['network'],
        'memo': json['memo'] == null ? undefined : json['memo'],
    };
}
function PrivateWithdrawalsPreparePostRequestToJSON(json) {
    return PrivateWithdrawalsPreparePostRequestToJSONTyped(json, false);
}
function PrivateWithdrawalsPreparePostRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'currency': value['currency'],
        'amount': value['amount'],
        'address': value['address'],
        'network': value['network'],
        'memo': value['memo'],
    };
}
