"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrivateOrdersPostRequestSideEnum = exports.PrivateOrdersPostRequestTypeEnum = void 0;
exports.instanceOfPrivateOrdersPostRequest = instanceOfPrivateOrdersPostRequest;
exports.PrivateOrdersPostRequestFromJSON = PrivateOrdersPostRequestFromJSON;
exports.PrivateOrdersPostRequestFromJSONTyped = PrivateOrdersPostRequestFromJSONTyped;
exports.PrivateOrdersPostRequestToJSON = PrivateOrdersPostRequestToJSON;
exports.PrivateOrdersPostRequestToJSONTyped = PrivateOrdersPostRequestToJSONTyped;
/**
 * @export
 */
exports.PrivateOrdersPostRequestTypeEnum = {
    Market: 'market',
    Limit: 'limit'
};
/**
 * @export
 */
exports.PrivateOrdersPostRequestSideEnum = {
    Buy: 'buy',
    Sell: 'sell'
};
/**
 * Check if a given object implements the PrivateOrdersPostRequest interface.
 */
function instanceOfPrivateOrdersPostRequest(value) {
    if (!('symbol' in value) || value['symbol'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('side' in value) || value['side'] === undefined)
        return false;
    return true;
}
function PrivateOrdersPostRequestFromJSON(json) {
    return PrivateOrdersPostRequestFromJSONTyped(json, false);
}
function PrivateOrdersPostRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'symbol': json['symbol'],
        'type': json['type'],
        'side': json['side'],
        'quantity': json['quantity'] == null ? undefined : json['quantity'],
        'cost': json['cost'] == null ? undefined : json['cost'],
        'price': json['price'] == null ? undefined : json['price'],
        'clientOrderId': json['client_order_id'] == null ? undefined : json['client_order_id'],
    };
}
function PrivateOrdersPostRequestToJSON(json) {
    return PrivateOrdersPostRequestToJSONTyped(json, false);
}
function PrivateOrdersPostRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'symbol': value['symbol'],
        'type': value['type'],
        'side': value['side'],
        'quantity': value['quantity'],
        'cost': value['cost'],
        'price': value['price'],
        'client_order_id': value['clientOrderId'],
    };
}
