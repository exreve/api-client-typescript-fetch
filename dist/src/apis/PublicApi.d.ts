/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { PublicCurrenciesGet200ResponseInner, PublicExkConfigGet200Response, PublicExkRedeemPostRequest, PublicForexPricesGet200Response, PublicFundsTransparencyGet200Response, PublicGainsLossesTransparencyGet200Response, PublicMarketsGet200ResponseInner, PublicMarketsTickersListGet200ResponseInner, PublicNetworksGet200ResponseInner, PublicOhlcvGet200ResponseInner, PublicOrderbookGet200Response, PublicPoolsFeesHistoryGet200ResponseInner, PublicPoolsGet200ResponseInner, PublicTradesGet200ResponseInner } from '../models/index';
export interface PublicExkRedeemPostOperationRequest {
    publicExkRedeemPostRequest: PublicExkRedeemPostRequest;
}
export interface PublicGainsLossesTransparencyGetRequest {
    unclaimedOnly?: any;
    period?: PublicGainsLossesTransparencyGetPeriodEnum;
}
export interface PublicOhlcvGetRequest {
    symbol: string;
    interval: number;
    page?: number;
    limit?: number;
    from?: number;
    to?: number;
}
export interface PublicOrderbookGetRequest {
    symbol: string;
    limit?: number;
}
export interface PublicPoolsFeesHistoryGetRequest {
    poolId?: string;
    startTime?: number;
    endTime?: number;
    limit?: number;
    page?: number;
}
export interface PublicTradesGetRequest {
    symbol: string;
    page?: number;
    limit?: number;
}
/**
 * PublicApi - interface
 *
 * @export
 * @interface PublicApiInterface
 */
export interface PublicApiInterface {
    /**
     * Get all active currencies
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicCurrenciesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicCurrenciesGet200ResponseInner>>>;
    /**
     * Get all active currencies
     */
    publicCurrenciesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicCurrenciesGet200ResponseInner>>;
    /**
     * Get the EXK token configuration
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicExkConfigGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicExkConfigGet200Response>>;
    /**
     * Get the EXK token configuration
     */
    publicExkConfigGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicExkConfigGet200Response>;
    /**
     * Redeem EXK tokens
     * @param {PublicExkRedeemPostRequest} publicExkRedeemPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicExkRedeemPostRaw(requestParameters: PublicExkRedeemPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: string | undefined;
    }>>;
    /**
     * Redeem EXK tokens
     */
    publicExkRedeemPost(requestParameters: PublicExkRedeemPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: string | undefined;
    }>;
    /**
     * Get the EXK reserves
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicExkReservesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: string | undefined;
    }>>;
    /**
     * Get the EXK reserves
     */
    publicExkReservesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: string | undefined;
    }>;
    /**
     * Get the forex prices, base is in USD, eg. EUR, GBP, HKD, SGD, ... Data is from an external provider.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicForexPricesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicForexPricesGet200Response>>;
    /**
     * Get the forex prices, base is in USD, eg. EUR, GBP, HKD, SGD, ... Data is from an external provider.
     */
    publicForexPricesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicForexPricesGet200Response>;
    /**
     * Get the funds transparency data (overall exchange balances)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicFundsTransparencyGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicFundsTransparencyGet200Response>>;
    /**
     * Get the funds transparency data (overall exchange balances)
     */
    publicFundsTransparencyGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicFundsTransparencyGet200Response>;
    /**
     * Get transparency information about exchange gains and losses
     * @param {any} [unclaimedOnly]
     * @param {'1d' | '7d' | '30d'} [period]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicGainsLossesTransparencyGetRaw(requestParameters: PublicGainsLossesTransparencyGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicGainsLossesTransparencyGet200Response>>;
    /**
     * Get transparency information about exchange gains and losses
     */
    publicGainsLossesTransparencyGet(requestParameters: PublicGainsLossesTransparencyGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicGainsLossesTransparencyGet200Response>;
    /**
     * Get all active markets
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicMarketsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicMarketsGet200ResponseInner>>>;
    /**
     * Get all active markets
     */
    publicMarketsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicMarketsGet200ResponseInner>>;
    /**
     * Get the 24h tickers for all markets
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicMarketsTickersListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicMarketsTickersListGet200ResponseInner>>>;
    /**
     * Get the 24h tickers for all markets
     */
    publicMarketsTickersListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicMarketsTickersListGet200ResponseInner>>;
    /**
     * Get all active networks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicNetworksGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicNetworksGet200ResponseInner>>>;
    /**
     * Get all active networks
     */
    publicNetworksGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicNetworksGet200ResponseInner>>;
    /**
     * Get the OHLCV data for a trading pair
     * @param {string} symbol
     * @param {number} interval
     * @param {number} [page]
     * @param {number} [limit]
     * @param {number} [from]
     * @param {number} [to]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicOhlcvGetRaw(requestParameters: PublicOhlcvGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicOhlcvGet200ResponseInner>>>;
    /**
     * Get the OHLCV data for a trading pair
     */
    publicOhlcvGet(requestParameters: PublicOhlcvGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicOhlcvGet200ResponseInner>>;
    /**
     * Get the orderbook for a trading pair
     * @param {string} symbol
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicOrderbookGetRaw(requestParameters: PublicOrderbookGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicOrderbookGet200Response>>;
    /**
     * Get the orderbook for a trading pair
     */
    publicOrderbookGet(requestParameters: PublicOrderbookGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicOrderbookGet200Response>;
    /**
     * Get the pool fees earnings history
     * @param {string} [poolId]
     * @param {number} [startTime]
     * @param {number} [endTime]
     * @param {number} [limit]
     * @param {number} [page]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicPoolsFeesHistoryGetRaw(requestParameters: PublicPoolsFeesHistoryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicPoolsFeesHistoryGet200ResponseInner>>>;
    /**
     * Get the pool fees earnings history
     */
    publicPoolsFeesHistoryGet(requestParameters: PublicPoolsFeesHistoryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicPoolsFeesHistoryGet200ResponseInner>>;
    /**
     * Get all active pools
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicPoolsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicPoolsGet200ResponseInner>>>;
    /**
     * Get all active pools
     */
    publicPoolsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicPoolsGet200ResponseInner>>;
    /**
     * Get the public trades for a trading pair
     * @param {string} symbol
     * @param {number} [page]
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PublicApiInterface
     */
    publicTradesGetRaw(requestParameters: PublicTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicTradesGet200ResponseInner>>>;
    /**
     * Get the public trades for a trading pair
     */
    publicTradesGet(requestParameters: PublicTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicTradesGet200ResponseInner>>;
}
/**
 *
 */
export declare class PublicApi extends runtime.BaseAPI implements PublicApiInterface {
    /**
     * Get all active currencies
     */
    publicCurrenciesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicCurrenciesGet200ResponseInner>>>;
    /**
     * Get all active currencies
     */
    publicCurrenciesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicCurrenciesGet200ResponseInner>>;
    /**
     * Get the EXK token configuration
     */
    publicExkConfigGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicExkConfigGet200Response>>;
    /**
     * Get the EXK token configuration
     */
    publicExkConfigGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicExkConfigGet200Response>;
    /**
     * Redeem EXK tokens
     */
    publicExkRedeemPostRaw(requestParameters: PublicExkRedeemPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: string | undefined;
    }>>;
    /**
     * Redeem EXK tokens
     */
    publicExkRedeemPost(requestParameters: PublicExkRedeemPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: string | undefined;
    }>;
    /**
     * Get the EXK reserves
     */
    publicExkReservesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{
        [key: string]: string | undefined;
    }>>;
    /**
     * Get the EXK reserves
     */
    publicExkReservesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{
        [key: string]: string | undefined;
    }>;
    /**
     * Get the forex prices, base is in USD, eg. EUR, GBP, HKD, SGD, ... Data is from an external provider.
     */
    publicForexPricesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicForexPricesGet200Response>>;
    /**
     * Get the forex prices, base is in USD, eg. EUR, GBP, HKD, SGD, ... Data is from an external provider.
     */
    publicForexPricesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicForexPricesGet200Response>;
    /**
     * Get the funds transparency data (overall exchange balances)
     */
    publicFundsTransparencyGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicFundsTransparencyGet200Response>>;
    /**
     * Get the funds transparency data (overall exchange balances)
     */
    publicFundsTransparencyGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicFundsTransparencyGet200Response>;
    /**
     * Get transparency information about exchange gains and losses
     */
    publicGainsLossesTransparencyGetRaw(requestParameters: PublicGainsLossesTransparencyGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicGainsLossesTransparencyGet200Response>>;
    /**
     * Get transparency information about exchange gains and losses
     */
    publicGainsLossesTransparencyGet(requestParameters?: PublicGainsLossesTransparencyGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicGainsLossesTransparencyGet200Response>;
    /**
     * Get all active markets
     */
    publicMarketsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicMarketsGet200ResponseInner>>>;
    /**
     * Get all active markets
     */
    publicMarketsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicMarketsGet200ResponseInner>>;
    /**
     * Get the 24h tickers for all markets
     */
    publicMarketsTickersListGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicMarketsTickersListGet200ResponseInner>>>;
    /**
     * Get the 24h tickers for all markets
     */
    publicMarketsTickersListGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicMarketsTickersListGet200ResponseInner>>;
    /**
     * Get all active networks
     */
    publicNetworksGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicNetworksGet200ResponseInner>>>;
    /**
     * Get all active networks
     */
    publicNetworksGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicNetworksGet200ResponseInner>>;
    /**
     * Get the OHLCV data for a trading pair
     */
    publicOhlcvGetRaw(requestParameters: PublicOhlcvGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicOhlcvGet200ResponseInner>>>;
    /**
     * Get the OHLCV data for a trading pair
     */
    publicOhlcvGet(requestParameters: PublicOhlcvGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicOhlcvGet200ResponseInner>>;
    /**
     * Get the orderbook for a trading pair
     */
    publicOrderbookGetRaw(requestParameters: PublicOrderbookGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PublicOrderbookGet200Response>>;
    /**
     * Get the orderbook for a trading pair
     */
    publicOrderbookGet(requestParameters: PublicOrderbookGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PublicOrderbookGet200Response>;
    /**
     * Get the pool fees earnings history
     */
    publicPoolsFeesHistoryGetRaw(requestParameters: PublicPoolsFeesHistoryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicPoolsFeesHistoryGet200ResponseInner>>>;
    /**
     * Get the pool fees earnings history
     */
    publicPoolsFeesHistoryGet(requestParameters?: PublicPoolsFeesHistoryGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicPoolsFeesHistoryGet200ResponseInner>>;
    /**
     * Get all active pools
     */
    publicPoolsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicPoolsGet200ResponseInner>>>;
    /**
     * Get all active pools
     */
    publicPoolsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicPoolsGet200ResponseInner>>;
    /**
     * Get the public trades for a trading pair
     */
    publicTradesGetRaw(requestParameters: PublicTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PublicTradesGet200ResponseInner>>>;
    /**
     * Get the public trades for a trading pair
     */
    publicTradesGet(requestParameters: PublicTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PublicTradesGet200ResponseInner>>;
}
/**
 * @export
 */
export declare const PublicGainsLossesTransparencyGetPeriodEnum: {
    readonly _1d: "1d";
    readonly _7d: "7d";
    readonly _30d: "30d";
};
export type PublicGainsLossesTransparencyGetPeriodEnum = typeof PublicGainsLossesTransparencyGetPeriodEnum[keyof typeof PublicGainsLossesTransparencyGetPeriodEnum];
