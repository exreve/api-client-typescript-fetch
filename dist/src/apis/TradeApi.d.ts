/**
 * ExKoin API Documentation
 * API documentation for ExKoin Crypto exchange
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { PrivateOrdersCancelAllPostRequest, PrivateOrdersCancelPostRequest, PrivateOrdersGet200ResponseInner, PrivateOrdersPostRequest, PrivateTradesGet200ResponseInner } from '../models/index';
export interface PrivateOrdersCancelAllPostOperationRequest {
    privateOrdersCancelAllPostRequest: PrivateOrdersCancelAllPostRequest;
}
export interface PrivateOrdersCancelPostOperationRequest {
    privateOrdersCancelPostRequest: PrivateOrdersCancelPostRequest;
}
export interface PrivateOrdersGetRequest {
    symbol?: string;
    isOpen?: any;
    hasFilled?: any;
    side?: PrivateOrdersGetSideEnum;
    page?: number;
    limit?: number;
}
export interface PrivateOrdersPostOperationRequest {
    privateOrdersPostRequest: PrivateOrdersPostRequest;
}
export interface PrivateTradesGetRequest {
    symbol?: string;
    side?: PrivateTradesGetSideEnum;
    takerOrMaker?: PrivateTradesGetTakerOrMakerEnum;
    page?: number;
    limit?: number;
}
/**
 * TradeApi - interface
 *
 * @export
 * @interface TradeApiInterface
 */
export interface TradeApiInterface {
    /**
     * Cancel all orders for a user
     * @param {PrivateOrdersCancelAllPostRequest} privateOrdersCancelAllPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TradeApiInterface
     */
    privateOrdersCancelAllPostRaw(requestParameters: PrivateOrdersCancelAllPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PrivateOrdersGet200ResponseInner>>>;
    /**
     * Cancel all orders for a user
     */
    privateOrdersCancelAllPost(requestParameters: PrivateOrdersCancelAllPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PrivateOrdersGet200ResponseInner>>;
    /**
     * Cancel an order
     * @param {PrivateOrdersCancelPostRequest} privateOrdersCancelPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TradeApiInterface
     */
    privateOrdersCancelPostRaw(requestParameters: PrivateOrdersCancelPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateOrdersGet200ResponseInner>>;
    /**
     * Cancel an order
     */
    privateOrdersCancelPost(requestParameters: PrivateOrdersCancelPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateOrdersGet200ResponseInner>;
    /**
     * Get the user orders
     * @param {string} [symbol]
     * @param {any} [isOpen]
     * @param {any} [hasFilled]
     * @param {'buy' | 'sell'} [side]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TradeApiInterface
     */
    privateOrdersGetRaw(requestParameters: PrivateOrdersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PrivateOrdersGet200ResponseInner>>>;
    /**
     * Get the user orders
     */
    privateOrdersGet(requestParameters: PrivateOrdersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PrivateOrdersGet200ResponseInner>>;
    /**
     * Create a new order
     * @param {PrivateOrdersPostRequest} privateOrdersPostRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TradeApiInterface
     */
    privateOrdersPostRaw(requestParameters: PrivateOrdersPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateOrdersGet200ResponseInner>>;
    /**
     * Create a new order
     */
    privateOrdersPost(requestParameters: PrivateOrdersPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateOrdersGet200ResponseInner>;
    /**
     * Get the user trades
     * @param {string} [symbol]
     * @param {'buy' | 'sell'} [side]
     * @param {'maker' | 'taker'} [takerOrMaker]
     * @param {number} [page]
     * @param {number} [limit]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TradeApiInterface
     */
    privateTradesGetRaw(requestParameters: PrivateTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PrivateTradesGet200ResponseInner>>>;
    /**
     * Get the user trades
     */
    privateTradesGet(requestParameters: PrivateTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PrivateTradesGet200ResponseInner>>;
}
/**
 *
 */
export declare class TradeApi extends runtime.BaseAPI implements TradeApiInterface {
    /**
     * Cancel all orders for a user
     */
    privateOrdersCancelAllPostRaw(requestParameters: PrivateOrdersCancelAllPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PrivateOrdersGet200ResponseInner>>>;
    /**
     * Cancel all orders for a user
     */
    privateOrdersCancelAllPost(requestParameters: PrivateOrdersCancelAllPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PrivateOrdersGet200ResponseInner>>;
    /**
     * Cancel an order
     */
    privateOrdersCancelPostRaw(requestParameters: PrivateOrdersCancelPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateOrdersGet200ResponseInner>>;
    /**
     * Cancel an order
     */
    privateOrdersCancelPost(requestParameters: PrivateOrdersCancelPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateOrdersGet200ResponseInner>;
    /**
     * Get the user orders
     */
    privateOrdersGetRaw(requestParameters: PrivateOrdersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PrivateOrdersGet200ResponseInner>>>;
    /**
     * Get the user orders
     */
    privateOrdersGet(requestParameters?: PrivateOrdersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PrivateOrdersGet200ResponseInner>>;
    /**
     * Create a new order
     */
    privateOrdersPostRaw(requestParameters: PrivateOrdersPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateOrdersGet200ResponseInner>>;
    /**
     * Create a new order
     */
    privateOrdersPost(requestParameters: PrivateOrdersPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateOrdersGet200ResponseInner>;
    /**
     * Get the user trades
     */
    privateTradesGetRaw(requestParameters: PrivateTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PrivateTradesGet200ResponseInner>>>;
    /**
     * Get the user trades
     */
    privateTradesGet(requestParameters?: PrivateTradesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PrivateTradesGet200ResponseInner>>;
}
/**
 * @export
 */
export declare const PrivateOrdersGetSideEnum: {
    readonly Buy: "buy";
    readonly Sell: "sell";
};
export type PrivateOrdersGetSideEnum = typeof PrivateOrdersGetSideEnum[keyof typeof PrivateOrdersGetSideEnum];
/**
 * @export
 */
export declare const PrivateTradesGetSideEnum: {
    readonly Buy: "buy";
    readonly Sell: "sell";
};
export type PrivateTradesGetSideEnum = typeof PrivateTradesGetSideEnum[keyof typeof PrivateTradesGetSideEnum];
/**
 * @export
 */
export declare const PrivateTradesGetTakerOrMakerEnum: {
    readonly Maker: "maker";
    readonly Taker: "taker";
};
export type PrivateTradesGetTakerOrMakerEnum = typeof PrivateTradesGetTakerOrMakerEnum[keyof typeof PrivateTradesGetTakerOrMakerEnum];
